{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelServices.js","resources/img/mjolnir.png","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelServices","_apiBase","_apiKey","_baseOffsetCharacter","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","type","repeatCount","dur","values","keyTimes","ErrorMessage","objectFit","src","img","alt","RandomChar","state","char","loading","errorLoad","marvelServices","onCharLoaded","setState","onCharLoading","updateChar","Math","floor","random","then","catch","onError","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","CharList","props","marvelCharacters","updateCharacters","onCharListLoading","onLoadedCharacters","ended","length","characters","newItemLoading","charEnded","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","itemRefs","setRef","ref","push","focusOnMouseItem","forEach","item","classList","remove","add","focus","focusOnClickItem","addEventListener","removeEventListener","arr","el","i","imgStyle","tabIndex","onMouseOver","onCharSelected","onKeyUp","e","key","onKeyPress","renderEl","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","comicsName","ErrorBoundary","error","info","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.43efa734.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelServices {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=ffb6264e66978431e1886839251560ad';\r\n    _baseOffsetCharacter = 210;\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    getAllCharacters = async (offset = this._baseOffsetCharacter) => {\r\n        const res = await this.getResource(\r\n            `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`\r\n        );\r\n        return res.data.results.map(this._transformCharacter);\r\n    };\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(\r\n            `${this._apiBase}characters/${id}?${this._apiKey}`\r\n        );\r\n\r\n        return this._transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    _transformCharacter = (res) => {\r\n        return {\r\n            id: res.id,\r\n            name: res.name,\r\n            description: res.description\r\n                ? `${res.description.slice(0, 200)}...`\r\n                : 'there is no data about the character',\r\n            thumbnail: res.thumbnail.path + '.' + res.thumbnail.extension,\r\n            homepage: res.urls[0].url,\r\n            wiki: res.urls[1].url,\r\n            comics: res.comics.items.slice(0, 10),\r\n        };\r\n    };\r\n}\r\n\r\nexport default MarvelServices;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{ margin: '0 auto', background: 'none', display: 'block' }}\n            width=\"211px\"\n            height=\"211px\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"xMidYMid\"\n        >\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                fill=\"none\"\n                stroke=\"#4996a2\"\n                strokeWidth=\"10\"\n                r=\"36\"\n                strokeDasharray=\"169.64600329384882 58.548667764616276\"\n            >\n                <animateTransform\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    repeatCount=\"indefinite\"\n                    dur=\"0.7s\"\n                    values=\"0 50 50;360 50 50\"\n                    keyTimes=\"0;1\"\n                ></animateTransform>\n            </circle>\n        </svg>\n    );\n};\n\nexport default Spinner;\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img\r\n            style={{\r\n                display: 'block',\r\n                width: '250px',\r\n                height: '250px',\r\n                objectFit: 'contain',\r\n                margin: '0 auto',\r\n            }}\r\n            src={img}\r\n            alt=\"Error message\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { Component } from 'react';\n\nimport MarvelServices from '../../services/MarvelServices';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        errorLoad: false,\n    };\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timetId = setInterval(this.updateChar, 4000);\n    }\n\n    // componentWillUnmount() {\n    //     clearInterval(this.timetId);\n    // }\n\n    marvelServices = new MarvelServices();\n\n    onCharLoaded = (res) => {\n        this.setState({ char: res, loading: false });\n    };\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        });\n    };\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelServices\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    };\n\n    onError = () => {\n        this.setState({ loading: false, errorLoad: true });\n    };\n\n    render() {\n        const { char, loading, errorLoad } = this.state;\n        const errorMessage = errorLoad ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || errorLoad) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!\n                        <br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">Or choose another one</p>\n                    <button\n                        onClick={this.updateChar}\n                        className=\"button button__main\"\n                    >\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img\n                        src={mjolnir}\n                        alt=\"mjolnir\"\n                        className=\"randomchar__decoration\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img\n                src={thumbnail}\n                alt=\"Random character\"\n                className=\"randomchar__img\"\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RandomChar;\n","import React from 'react';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelServices from '../../services/MarvelServices';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            characters: [],\n            loading: true,\n            errorLoad: false,\n            newItemLoading: false,\n            offset: 210,\n            charEnded: false,\n        };\n    }\n    marvelCharacters = new MarvelServices();\n\n    updateCharacters = (offset) => {\n        this.onCharListLoading();\n        this.marvelCharacters\n            .getAllCharacters(offset)\n            .then(this.onLoadedCharacters)\n            .catch(this.onError);\n    };\n\n    onLoadedCharacters = (res) => {\n        let ended = false;\n\n        if (res.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({ offset, characters }) => ({\n            characters: [...characters, ...res],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended,\n        }));\n    };\n\n    onError = () => {\n        this.setState({ loading: false, errorLoad: true });\n    };\n\n    onCharListLoading = () => {\n        this.setState({ newItemLoading: true });\n    };\n\n    onScroll = () => {\n        if (this.state.offset < 219) return;\n        if (this.state.newItemLoading) return;\n        if (this.state.charEnded) return;\n        if (\n            window.pageYOffset + document.documentElement.clientHeight >=\n            document.documentElement.scrollHeight\n        ) {\n            this.updateCharacters(this.state.offset);\n        }\n    };\n    componentDidMount() {\n        this.updateCharacters();\n        window.addEventListener('scroll', this.onScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.onScroll);\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    };\n\n    focusOnMouseItem = (id) => {\n        this.itemRefs.forEach((item) =>\n            item.classList.remove('char__item_selected-focus')\n        );\n        this.itemRefs[id].classList.add('char__item_selected-focus');\n        this.itemRefs[id].focus();\n    };\n\n    focusOnClickItem = (id) => {\n        this.itemRefs.forEach((item) =>\n            item.classList.remove('char__item_selected')\n        );\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    };\n\n    renderEl(arr) {\n        const item = arr.map((el, i) => {\n            let imgStyle = { objectFit: 'cover' };\n            if (\n                el.thumbnail ===\n                'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n            ) {\n                imgStyle = { objectFit: 'fill' };\n            }\n\n            return (\n                <li\n                    ref={this.setRef}\n                    tabIndex={0}\n                    key={el.id}\n                    onMouseOver={() => {\n                        this.focusOnMouseItem(i);\n                    }}\n                    onClick={() => {\n                        this.props.onCharSelected(el.id);\n                        this.focusOnClickItem(i);\n                    }}\n                    onKeyUp={(e) => {\n                        if (e.key === ' ' || e.key === 'Tab') {\n                            this.focusOnMouseItem(i);\n                        }\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            this.props.onCharSelected(el.id);\n                            this.focusOnClickItem(i);\n                        }\n                    }}\n                    className=\"char__item\"\n                >\n                    <img src={el.thumbnail} alt={el.name} style={imgStyle} />\n                    <div className=\"char__name\">{el.name}</div>\n                </li>\n            );\n        });\n        return <ul className=\"char__grid\">{item}</ul>;\n    }\n\n    render() {\n        const {\n            characters,\n            loading,\n            errorLoad,\n            newItemLoading,\n            offset,\n            charEnded,\n        } = this.state;\n        const item = this.renderEl(characters);\n\n        return (\n            <div className=\"char__list\">\n                {errorLoad ? <ErrorMessage /> : loading ? <Spinner /> : item}\n                <button\n                    onClick={() => this.updateCharacters(offset)}\n                    disabled={newItemLoading}\n                    style={{ display: charEnded ? 'none' : 'block' }}\n                    className=\"button button__main button__long\"\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        );\n    }\n}\n\nCharList.propTypes = {\n    charId: PropTypes.number,\n    onCharSelected: PropTypes.func,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport MarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            char: null,\n            loading: false,\n            errorLoad: false,\n        };\n    }\n\n    marvelServices = new MarvelServices();\n\n    onCharLoaded = (res) => {\n        this.setState({ char: res, loading: false });\n    };\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n        });\n    };\n\n    onError = () => {\n        this.setState({ loading: false, errorLoad: true });\n    };\n\n    updateChar = () => {\n        const { charId } = this.props;\n\n        if (!charId) {\n            return;\n        }\n        this.onCharLoading();\n        this.marvelServices\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    };\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    render() {\n        const { char, loading, errorLoad } = this.state;\n\n        const skeleton = char || loading || errorLoad ? null : <Skeleton />;\n        const errorMessage = errorLoad ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || errorLoad || !char) ? (\n            <View char={char} />\n        ) : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = { objectFit: 'cover' };\n    if (\n        thumbnail ===\n        'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n    ) {\n        imgStyle = { objectFit: 'fill' };\n    }\n\n    const comicsName = comics.map((el, i) => {\n        return (\n            <li key={i} className=\"char__comics-item\">\n                {el.name}\n            </li>\n        );\n    });\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0\n                    ? comicsName\n                    : 'Unfortunately there are no comics on this character'}\n            </ul>\n        </>\n    );\n};\n\nexport default CharInfo;\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    };\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error, info);\r\n        this.setState({ error: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from 'react';\n\nimport AppHeader from '../appHeader/AppHeader';\nimport RandomChar from '../randomChar/RandomChar';\nimport CharList from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null,\n    };\n\n    onCharSelected = (id) => {\n        this.setState({ selectedChar: id });\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img\n                        className=\"bg-decoration\"\n                        src={decoration}\n                        alt=\"vision\"\n                    />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}